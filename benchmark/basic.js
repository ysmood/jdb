// Generated by CoffeeScript 1.9.3
var Benchmark, count, jdb, suite;

Benchmark = require('benchmark');

suite = new Benchmark.Suite;

Benchmark.support.timeout = false;

jdb = require('../')();

count = 0;

suite.add('* insert', {
  defer: true,
  fn: function(deferred) {
    return jdb.exec({
      command: function(jdb) {
        jdb.doc.arr[count++] = Math.random();
        return jdb.save();
      },
      callback: function(err, data) {
        if (err) {
          return deferred.reject(err);
        }
        return deferred.resolve();
      }
    });
  }
}).add('* query', {
  fn: function() {
    var val;
    return val = jdb.doc.arr.slice(0, Math.random() * 100);
  }
}).on('cycle', function(e) {
  return console.log(e.target.toString());
}).on('complete', function(e) {
  var fs;
  fs = require('fs');
  return fs.unlink('jdb.db');
});

jdb.init({
  promise: false
}).then(function() {
  jdb.exec(function(jdb) {
    jdb.doc.arr = [];
    return jdb.save();
  });
  return suite.run();
});
