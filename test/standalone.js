// Generated by CoffeeScript 1.9.3
var assert, kit, max_retry, port, retry_count, server;

kit = require('nokit');

assert = require('assert');

port = 8237;

server = null;

max_retry = 10;

retry_count = 0;

describe('Standalone Mode:', function() {
  var exit;
  before(function(tdone) {
    server = kit.spawn('node', ['bin/jdb.js', '-p', port]).process;
    return setTimeout(function() {
      return tdone();
    }, 1000);
  });
  exit = function() {
    return server.kill('SIGINT');
  };
  return it('the server should return right value.', function(tdone) {
    var cmd, http, req;
    http = require('http');
    cmd = '{ "data": 10, "command": "function(jdb, data) { jdb.doc.ys = 1; jdb.save(jdb.doc); }" }';
    req = http.request({
      host: '127.0.0.1',
      port: port,
      path: '/exec',
      method: 'POST'
    }, function(res) {
      var data;
      data = '';
      res.on('data', function(chunk) {
        return data += chunk;
      });
      return res.on('end', function() {
        var e;
        data = JSON.parse(data);
        try {
          assert.equal(data.ys, 1);
          return tdone();
        } catch (_error) {
          e = _error;
          return tdone(e);
        } finally {
          exit();
        }
      });
    });
    req.on('error', function(e) {
      tdone(e.message);
      return exit();
    });
    return req.end(cmd);
  });
});
